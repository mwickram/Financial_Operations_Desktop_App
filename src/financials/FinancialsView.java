/*
 * FinancialsView.java
 */

package financials;


import business.Annuity;
import business.Loan;
import business.Panelclose;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.NumberFormat;
import java.util.ArrayList;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 * The application's main frame.
 */
public class FinancialsView extends FrameView {
    Annuity a;//global variable
    Loan ln;
    Panelclose pg;
     
    
    
    public FinancialsView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = FinancialsApp.getApplication().getMainFrame();
            aboutBox = new FinancialsAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        FinancialsApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jradAnnuity = new javax.swing.JRadioButton();
        jradLoan = new javax.swing.JRadioButton();
        jlblAmount = new javax.swing.JLabel();
        jtxtAmount = new javax.swing.JTextField();
        jlblAmout1 = new javax.swing.JLabel();
        jtxtRate = new javax.swing.JTextField();
        jlblAmout2 = new javax.swing.JLabel();
        jtxtTerm = new javax.swing.JTextField();
        jbtnCalc = new javax.swing.JButton();
        jlblResult = new javax.swing.JLabel();
        jtxtResult = new javax.swing.JTextField();
        jbtnSched = new javax.swing.JButton();
        jbtnClear = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        buttonGroup1 = new javax.swing.ButtonGroup();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(financials.FinancialsApp.class).getContext().getResourceMap(FinancialsView.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        buttonGroup1.add(jradAnnuity);
        jradAnnuity.setSelected(true);
        jradAnnuity.setText(resourceMap.getString("jradAnnuity.text")); // NOI18N
        jradAnnuity.setName("jradAnnuity"); // NOI18N
        jradAnnuity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jradAnnuityItemStateChanged(evt);
            }
        });

        buttonGroup1.add(jradLoan);
        jradLoan.setText(resourceMap.getString("jradLoan.text")); // NOI18N
        jradLoan.setName("jradLoan"); // NOI18N
        jradLoan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jradLoanItemStateChanged(evt);
            }
        });

        jlblAmount.setFont(resourceMap.getFont("jlblAmount.font")); // NOI18N
        jlblAmount.setText(resourceMap.getString("jlblAmount.text")); // NOI18N
        jlblAmount.setName("jlblAmount"); // NOI18N

        jtxtAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtAmount.setText(resourceMap.getString("jtxtAmount.text")); // NOI18N
        jtxtAmount.setName("jtxtAmount"); // NOI18N

        jlblAmout1.setFont(resourceMap.getFont("jlblAmout1.font")); // NOI18N
        jlblAmout1.setText(resourceMap.getString("jlblAmout1.text")); // NOI18N
        jlblAmout1.setName("jlblAmout1"); // NOI18N

        jtxtRate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtRate.setName("jtxtRate"); // NOI18N

        jlblAmout2.setFont(resourceMap.getFont("jlblAmout2.font")); // NOI18N
        jlblAmout2.setText(resourceMap.getString("jlblAmout2.text")); // NOI18N
        jlblAmout2.setName("jlblAmout2"); // NOI18N

        jtxtTerm.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtTerm.setName("jtxtTerm"); // NOI18N

        jbtnCalc.setText(resourceMap.getString("jbtnCalc.text")); // NOI18N
        jbtnCalc.setToolTipText(resourceMap.getString("jbtnCalc.toolTipText")); // NOI18N
        jbtnCalc.setName("jbtnCalc"); // NOI18N
        jbtnCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCalcActionPerformed(evt);
            }
        });

        jlblResult.setFont(resourceMap.getFont("jlblResult.font")); // NOI18N
        jlblResult.setText(resourceMap.getString("jlblResult.text")); // NOI18N
        jlblResult.setName("jlblResult"); // NOI18N

        jtxtResult.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtResult.setName("jtxtResult"); // NOI18N

        jbtnSched.setText(resourceMap.getString("jbtnSched.text")); // NOI18N
        jbtnSched.setEnabled(false);
        jbtnSched.setName("jbtnSched"); // NOI18N
        jbtnSched.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSchedActionPerformed(evt);
            }
        });

        jbtnClear.setText(resourceMap.getString("jbtnClear.text")); // NOI18N
        jbtnClear.setName("jbtnClear"); // NOI18N
        jbtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jradAnnuity)
                        .addGap(18, 18, 18)
                        .addComponent(jradLoan))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlblAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlblAmout1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlblAmout2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlblResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(67, 67, 67)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtRate, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(mainPanelLayout.createSequentialGroup()
                                    .addComponent(jbtnSched)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbtnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jtxtResult, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jbtnCalc))))
                .addContainerGap(270, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jradAnnuity)
                    .addComponent(jradLoan))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblAmount)
                    .addComponent(jtxtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblAmout1)
                    .addComponent(jtxtRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblAmout2)
                    .addComponent(jtxtTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jbtnCalc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblResult))
                .addGap(33, 33, 33)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnSched)
                    .addComponent(jbtnClear))
                .addGap(55, 55, 55))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(financials.FinancialsApp.class).getContext().getActionMap(FinancialsView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 519, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void jradAnnuityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jradAnnuityItemStateChanged
      
        if(jradAnnuity.isSelected()) {
            jlblAmount.setText(Annuity.AMTDESC + ":");
            jlblResult.setText(Annuity.RESULTDESC + ":");
        }
    }//GEN-LAST:event_jradAnnuityItemStateChanged

    private void jradLoanItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jradLoanItemStateChanged
     
        if (jradLoan.isSelected()){
            jlblAmount.setText(Loan.AMTDESC + ":");
            jlblResult.setText(Loan.RESULTDESC + ":");
        }
    }//GEN-LAST:event_jradLoanItemStateChanged

    private void jbtnCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCalcActionPerformed
        double amt, rate;
        int term;
        NumberFormat curr = NumberFormat.getCurrencyInstance();
        statusMessageLabel.setText("");
        
        try {
            amt = Double.parseDouble(jtxtAmount.getText());
           
        } catch (NumberFormatException e){
            statusMessageLabel.setText("Amount is not numeric");
            jtxtAmount.requestFocusInWindow();
            return;
        }
        try {
            rate =  Double.parseDouble(jtxtRate.getText());
            
        }catch (NumberFormatException e) {
            statusMessageLabel.setText("Rate is not numeric");
            jtxtRate.requestFocusInWindow();
            return;
        }
        try {
            term = Integer.parseInt(jtxtTerm.getText());
        
        }catch (NumberFormatException e){
            statusMessageLabel.setText("Term is not numeric");
            jtxtTerm.requestFocusInWindow();
            return;
        }
        if (jradAnnuity.isSelected()){
            a = new Annuity (amt, rate, term);
            if (a.getErrorMsg().isEmpty()){
                jtxtResult.setText(curr.format(a.getFinalValue()));
                jbtnSched.setEnabled(true);
            }else {
                statusMessageLabel.setText(a.getErrorMsg());
            } 
            
        }else if (jradLoan.isSelected()){
            ln = new Loan(amt, rate, term);
            if (ln.getErrorMsg().isEmpty()){
                jtxtResult.setText(curr.format(ln.getMonthlyPmt()));
                jbtnSched.setEnabled(true);
             }
            else{
                statusMessageLabel.setText(ln.getErrorMsg());
                }
        }
    }//GEN-LAST:event_jbtnCalcActionPerformed

    private void jbtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnClearActionPerformed
        jtxtAmount.setText("");
        jtxtRate.setText("");
        jtxtTerm.setText("");
        jtxtResult.setText("");
        jbtnSched.setEnabled(false);
        statusMessageLabel.setText("");
        jtxtAmount.requestFocusInWindow();
        
        JDialog kg = pg.getdg();



        kg.setVisible(false);
    }//GEN-LAST:event_jbtnClearActionPerformed

    private void jbtnSchedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSchedActionPerformed
        
        
        NumberFormat curr = NumberFormat.getCurrencyInstance();//create number format for currency
        NumberFormat pct = NumberFormat.getPercentInstance();//number format for percentage
        
         pct.setMinimumFractionDigits(3);//set minimum fraction digit to three digit
         statusMessageLabel.setText("");  
         //JTable sched;//creat a JTable type variable code sched
         JTable sched = new JTable(new DefaultTableModel());//initializing sched variable.
         //this give a blank table
         DefaultTableModel mod;//a default table model called mod 
                                //(mod is the name of a table model type  
         String title="";
         //JTable sched = new JTable(new DefaultTableModel());
         DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
         rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
         
         if (jradAnnuity.isSelected()){
            title = " Annuity Schedule for: " +
                     curr.format(a.getDeposit()) + " monthly @ " +
                     pct.format(a.getIntRate()) + " for " +
                     a.getTerm() + " months. ";
             String[] cols = {"Months", "Beg.Bal", "Deposit", "Rate", 
                                                "Int.Earned", "End.Bal"};//creat column names
             String [][] t = new String[a.getTerm()][6];
             mod = new DefaultTableModel(t, cols);
             sched = new JTable(mod);
             for (int i=0; i < a.getTerm(); i++){
                 int mo = i + 1;
                 sched.setValueAt(mo, i, 0);
                 sched.setValueAt(
                         curr.format(a.getBegBal(mo)), i, 1);
                 sched.setValueAt(
                         curr.format(a.getDeposit()),i, 2);
                 sched.setValueAt(
                         pct.format(a.getIntRate()),i, 3);
                 sched.setValueAt(
                         curr.format(a.getIntEarned(mo)),i,4);
                 sched.setValueAt(
                         curr.format(a.getEndBal(mo)), i, 5);
 
             }
             
         }else if (jradLoan.isSelected()){
             
             title = "Loan Schedule for: " + 
                    curr.format(ln.getPrincipal()) + "monthly @" +
                    curr.format(ln.getMonthlyPmt());
            
             String[] cols ={"Months","Beg.Bal.","Payment","Int.Chg.","End.Bal"}; 
             String[][] t = new String[ln.getTerm()][5];
             mod = new DefaultTableModel(t, cols);
             sched = new JTable(mod);
             for (int i=0; i<ln.getTerm();i++){
                 int mo = i+1;
                 sched.setValueAt(mo, i, 0);
                 sched.setValueAt(curr.format(ln.getBegBal(mo)), i, 1);
                 sched.setValueAt(curr.format(ln.getMonthlyPmt()),i, 2);
                 sched.setValueAt(curr.format(ln.getIntChg(mo)),i,3);
                 sched.setValueAt(curr.format(ln.getEndBal(mo)),i,4);
                 
             }
  
             
         }else {
             statusMessageLabel.setText("Unknown financial operation");
             return;
         }

         
         //build and display sched inside container objects
         JScrollPane sp = new JScrollPane(sched);

         
         JDialog dg = new JDialog();
         //ArrayList<JDialog> dg = new ArrayList<JDialog>();
         dg.add(sp);
         dg.setTitle(title);
         dg.setBounds(150, 400, 600, 300);

         int rc=sched.getColumnCount();
                 
         for (int i=0; i<rc;i++){

         sched.getColumnModel().getColumn(i).setCellRenderer(rightRenderer);
         }

        dg.setVisible(true);
        pg = new Panelclose(dg);
        //JDialog kg = pg.getdg();
        //kg.setVisible(true);
         
    }//GEN-LAST:event_jbtnSchedActionPerformed




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jbtnCalc;
    private javax.swing.JButton jbtnClear;
    private javax.swing.JButton jbtnSched;
    private javax.swing.JLabel jlblAmount;
    private javax.swing.JLabel jlblAmout1;
    private javax.swing.JLabel jlblAmout2;
    private javax.swing.JLabel jlblResult;
    private javax.swing.JRadioButton jradAnnuity;
    private javax.swing.JRadioButton jradLoan;
    private javax.swing.JTextField jtxtAmount;
    private javax.swing.JTextField jtxtRate;
    private javax.swing.JTextField jtxtResult;
    private javax.swing.JTextField jtxtTerm;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
